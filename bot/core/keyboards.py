from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from bot.config import CURRENCY_GROUPS, TIMEFRAMES, DEFAULT_SETTINGS

def create_menu_buttons(buttons_data: list, back_button: bool = True) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–µ–Ω—é –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫.
    
    Args:
        buttons_data: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (—Ç–µ–∫—Å—Ç, callback_data)
        back_button: –î–æ–±–∞–≤–ª—è—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    
    Returns:
        InlineKeyboardMarkup: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    """
    keyboard = [[InlineKeyboardButton(text, callback_data=callback)] for text, callback in buttons_data]
    if back_button:
        keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back')])
    return InlineKeyboardMarkup(keyboard)

def create_settings_keyboard(settings: dict) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤.
    
    Args:
        settings: –°–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    """
    keyboard = [
        [
            InlineKeyboardButton(f"üìä RSI: {settings['RSI_PERIOD']}", callback_data='set_rsi'),
            InlineKeyboardButton(f"üìâ MACD: {settings['MACD_FAST']}/{settings['MACD_SLOW']}", callback_data='set_macd')
        ],
        [
            InlineKeyboardButton(f"üìä BBands: {settings['BB_PERIOD']}/{settings['BB_STDDEV']}", callback_data='set_bb'),
            InlineKeyboardButton(f"üìà Stochastic: {settings['STOCH_K']}/{settings['STOCH_D']}", callback_data='set_stoch')
        ],
        [
            InlineKeyboardButton(f"üìä ADX: {settings['ADX_PERIOD']}", callback_data='set_adx'),
            InlineKeyboardButton(f"üìâ Supertrend: {settings['SUPERTREND_PERIOD']}/{settings['SUPERTREND_MULTIPLIER']}", callback_data='set_supertrend')
        ],
        [
            InlineKeyboardButton(f"üìä Ichimoku: {settings['ICHIMOKU_TENKAN']}/{settings['ICHIMOKU_KIJUN']}", callback_data='set_ichimoku'),
            InlineKeyboardButton(f"üìà EMA: {settings['EMA_FAST']}/{settings['EMA_SLOW']}", callback_data='set_ema')
        ],
        [InlineKeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_to_main')]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_currency_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç—ã.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞–ª—é—Ç–∞–º–∏
    """
    buttons = [
        ("üá™üá∫ EUR", 'currency_EUR'),
        ("üá∫üá∏ USD", 'currency_USD'),
        ("üá¨üáß GBP", 'currency_GBP'),
        ("üá¶üá∫ AUD", 'currency_AUD'),
        ("üáØüáµ JPY", 'currency_JPY'),
        ("üá®üá¶ CAD", 'currency_CAD'),
        ("üá®üá≠ CHF", 'currency_CHF'),
        ("‚Çø BTC", 'currency_BTC')
    ]
    return InlineKeyboardMarkup([[InlineKeyboardButton(text, callback_data=data)] for text, data in buttons])

def create_pairs_keyboard(currency: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã.
    
    Args:
        currency: –ö–æ–¥ –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'EUR')
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–∞—Ä–∞–º–∏
    """
    pairs = CURRENCY_GROUPS.get(currency, [])
    buttons = [(pair, f'pair_{i}') for i, pair in enumerate(pairs)]
    keyboard = [[InlineKeyboardButton(text, callback_data=data)] for text, data in buttons]
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back')])
    return InlineKeyboardMarkup(keyboard)

def create_timeframes_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞.
    
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º–∏
    """
    buttons = [(tf, f'tf_{i}') for i, tf in enumerate(TIMEFRAMES)]
    keyboard = [[InlineKeyboardButton(text, callback_data=data)] for text, data in buttons]
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back')])
    return InlineKeyboardMarkup(keyboard)

def create_back_keyboard(back_data: str = 'back') -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥".
    
    Args:
        back_data: Callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        
    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    """
    return InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=back_data)]])